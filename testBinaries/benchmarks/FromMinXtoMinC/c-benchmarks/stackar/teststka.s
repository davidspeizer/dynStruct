# Code auto-generated by MinxCC

teststka.istr0 {
	mov4 r1, 2 ;
	alloc r0, r1 * 1;
	mov4 r2, r0 ;
	mov1 r3, 10 ;
	mov1 [r2], r3 ;
	add4 r2, 1 ;
	mov1 r3, 0 ;
	mov1 [r2], r3 ;
	ret
} <(), r0, (r1, r2, r3)> 




main {
	# emit "call" operands: r3 (k: 4 t: 14), CreateStack (k: 9 t: 19)
	mov4 r5, 12 ;
	call r3, CreateStack, (r5) ;
	# emit "=" operands: r4 (k: 4 t: 4), 0 (k: 3 t: 4)
	mov4 r4, 0 ;
	# emit "jmp" operands:  (k: 137394232 t: 16)
	goto .BB1
.BB0:
	# emit "call", Push (k: 9 t: 19)
	call r6, Push, (r4, r3) ;
	# emit "++" operands: r4 (k: 4 t: 4)
	add4 r4, 1 ;
.BB1:
	# emit "<" operands:  (k: 137393832 t: -56), r4 (k: 4 t: 4), 10 (k: 3 t: 4)
	mov4 r7, r4 ;
	sub4 r7, 10 ;
	# xor
	mov4 r8, r4 ;
	mov4 r10, r4 ;
	or4 r8, 10 ;
	and4 r10, 10 ;
	sub4 r8, r10 ;
	# xor
	mov4 r9, r7 ;
	mov4 r11, r7 ;
	or4 r9, r4 ;
	and4 r11, r4 ;
	sub4 r9, r11 ;
	and4 r8, r9 ;
	# xor
	mov4 r9, r7 ;
	mov4 r12, r7 ;
	or4 r9, r8 ;
	and4 r12, r8 ;
	sub4 r9, r12 ;
	sr4 r9, 31 ;
	if4 (r9) goto .BB0 ;
	# emit "jmp" operands:  (k: 137395240 t: -72)
	goto .BB3
.BB2:
	# emit "call" operands: t3 (k: 5 t: 4), Top (k: 9 t: 19)
	call r13, Top, (r3) ;
	# emit "call", print32 (k: 9 t: 19)
	call r14, print32, (r13) ;
	# emit "&" operands: t5 (k: 5 t: 14), teststka.istr0 (k: 7 t: 18)
	call r15, teststka.istr0, () ;
	# emit "call", prints (k: 9 t: 19)
	call r16, prints, (r15) ;
	# emit "call", Pop (k: 9 t: 19)
	call r17, Pop, (r3) ;
.BB3:
	# emit "call" operands: t7 (k: 5 t: 4), IsEmpty (k: 9 t: 19)
	call r18, IsEmpty, (r3) ;
	# emit "" operands:  (k: 137394448 t: 112), t7 (k: 5 t: 4)
	mov4 r19, r18 ;
	sub4 r19, 1 ;
	# ~x
	mov4 r20, r18 ;
	mul4 r20, -1 ;
	add4 r20, -1 ;
	and4 r19, r20 ;
	sr4 r19, 31 ;
	if4 (r19) goto .BB2 ;
	# emit "call", DisposeStack (k: 9 t: 19)
	call r21, DisposeStack, (r3) ;
	# emit "ret" operands: 0 (k: 3 t: 4)
	mov4 r0, 0 ;
	ret
} <(r1, r2), r0, (r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21)>

